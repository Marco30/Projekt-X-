@model OnlineVoting.Models.ElectionDetailsView
@{
    ViewBag.Title = "Details";
}

<div class="row">

    <div class="col-md-6">

        <h3>Details</h3>


        <div>

            <hr />
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.State.Descripcion)
                </dt>
                <dd>
                    @ViewBag.StateDescripcion
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Description)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Description)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Remarks)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Remarks)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.DateTimeStart)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.DateTimeStart)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.DateTimeEnd)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.DateTimeEnd)
                </dd>

                @* <dt>
                        @Html.DisplayNameFor(model => model.IsForAllUsers)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.IsForAllUsers)
                    </dd> *@


                <dt>
                    @Html.DisplayNameFor(model => model.IsEnableBlankVote)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.IsEnableBlankVote)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.QuantityVotes)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.QuantityVotes)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.QuantityBlankVotes)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.QuantityBlankVotes)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.CandidateWinId)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.CandidateWinId)
                </dd>
            </dl>
        </div>
        <p>
            @if (!Model.IsForAllUsers)
            {

            }
            @*@Html.ActionLink("Search and add candidate", "SearchAndAddCandidate", new { id = Model.VotingId }, new { @class = "btn btn-info" })*@
            @Html.ActionLink("Edit", "Edit", new { id = Model.ElectionId }, new { @class = "btn btn-info" }) |
            @Html.ActionLink("Back to List", "Index", new { }, new { @class = "btn btn-success" })
        </p>

    </div>


    <div class="col-md-6">
  

        <section id="candidates">
            <h3>Delete Candidates</h3>
            <hr />
            @if (Model.Candidates.Count > 0)
            {
                <table class="table" id="DeleteCandidates">
                    <tr id="hide">
                        <th>
                            @Html.DisplayNameFor(model => Model.Candidates[0].User.UserName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => Model.Candidates[0].User.FullName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => Model.Candidates[0].User.Photo)
                        </th>
                        <th></th>
                    </tr>
                    @for (int i = 0; i < Model.Candidates.Count; i++)
                {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => Model.Candidates[i].User.UserName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => Model.Candidates[i].User.FullName)
                            </td>
                            <!--view photo-->
                            <td>
                                @if (!string.IsNullOrEmpty(Model.Candidates[i].User.Photo))
                                {
                                    <img src="@Url.Content(Model.Candidates[i].User.Photo)" alt="Image" style="width:100px;height:100px;max-width: 100%; height: auto;" />
                                }
                            </td>
                            <td>
                                @Html.ActionLink(
                                "Delete",
                                "DeleteCandidate",
                             new { id = Model.Candidates[i].CandidateId },
                             new { @class = "btn btn-danger", onclick = "return confirm('Are you sure to delete this candidate?');" })
                            </td>
                        </tr>
                    }
                </table>
            }
            else
            {
                <h5>Not candidates added yet</h5>
            }
        </section>

    </div>


</div>  


<div class="row">


    @*candidates*@
    <div class="col-md-8">

        @*@Html.Action("SearchAndAddCandidate", new { id = Model.VotingId })*@


        @*@Html.Partial("_SearchAndAddCandidate", Model.Users)*@

        <div id="resultTarget">

            @Html.Action("_SearchAndAddCandidate", new { id = Model.ElectionId })

        </div>

    </div>

</div>  

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")

        <script type="text/javascript">

            //ajaxs funktion som tar i mot resultar från  MakeUserToCandidate funktionen i VotingsController och gör så att partial view ladar om parent view
          var onSuccess = function doIt(result) {
                if (result.url) {
                    window.location.href = result.url;

                    //hittar om en div med ett vist id har text inuti 


                }
            };

            // kallar på GetNameSearch funktion som finns i VotingsController, det använda för autocomplete
            $(function () {


                $("#SearchText").autocomplete({
                    source: '@Url.Action("GetNameSearch")'
                });

            }); 


        </script>

    }
